<?php
/**
 * SearchApi
 * PHP version 5
 *
 * @category Class
 * @package  NexusClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Nexus Repository Manager REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.26.1-02
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace NexusClient\Api;

use GuzzleHttp\Client;
use GuzzleHttp\ClientInterface;
use GuzzleHttp\Exception\RequestException;
use GuzzleHttp\Psr7\MultipartStream;
use GuzzleHttp\Psr7\Request;
use GuzzleHttp\RequestOptions;
use NexusClient\ApiException;
use NexusClient\Configuration;
use NexusClient\HeaderSelector;
use NexusClient\ObjectSerializer;

/**
 * SearchApi Class Doc Comment
 *
 * @category Class
 * @package  NexusClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SearchApi
{
    /**
     * @var ClientInterface
     */
    protected $client;

    /**
     * @var Configuration
     */
    protected $config;

    /**
     * @var HeaderSelector
     */
    protected $headerSelector;

    /**
     * @param ClientInterface $client
     * @param Configuration   $config
     * @param HeaderSelector  $selector
     */
    public function __construct(
        ClientInterface $client = null,
        Configuration $config = null,
        HeaderSelector $selector = null
    ) {
        $this->client = $client ?: new Client();
        $this->config = $config ?: new Configuration();
        $this->headerSelector = $selector ?: new HeaderSelector();
    }

    /**
     * @return Configuration
     */
    public function getConfig()
    {
        return $this->config;
    }

    /**
     * Operation search
     *
     * Search components
     *
     * @param  string $continuation_token A token returned by a prior request. If present, the next page of results are returned (optional)
     * @param  string $sort The field to sort the results against, if left empty, a sort based on match weight will be used. (optional)
     * @param  string $direction The direction to sort records in, defaults to ascending (&#39;asc&#39;) for all sort fields, except version, which defaults to descending (&#39;desc&#39;) (optional)
     * @param  int $timeout How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used. (optional)
     * @param  string $q Query by keyword (optional)
     * @param  string $repository Repository name (optional)
     * @param  string $format Query by format (optional)
     * @param  string $group Component group (optional)
     * @param  string $name Component name (optional)
     * @param  string $version Component version (optional)
     * @param  string $md5 Specific MD5 hash of component&#39;s asset (optional)
     * @param  string $sha1 Specific SHA-1 hash of component&#39;s asset (optional)
     * @param  string $sha256 Specific SHA-256 hash of component&#39;s asset (optional)
     * @param  string $sha512 Specific SHA-512 hash of component&#39;s asset (optional)
     * @param  string $prerelease Prerelease version flag (optional)
     * @param  string $conan_base_version baseVersion (optional)
     * @param  string $conan_channel channel (optional)
     * @param  string $docker_image_name Docker image name (optional)
     * @param  string $docker_image_tag Docker image tag (optional)
     * @param  string $docker_layer_id Docker layer ID (optional)
     * @param  string $docker_content_digest Docker content digest (optional)
     * @param  string $maven_group_id Maven groupId (optional)
     * @param  string $maven_artifact_id Maven artifactId (optional)
     * @param  string $maven_base_version Maven base version (optional)
     * @param  string $maven_extension Maven extension of component&#39;s asset (optional)
     * @param  string $maven_classifier Maven classifier of component&#39;s asset (optional)
     * @param  string $npm_scope npm scope (optional)
     * @param  string $nuget_id NuGet id (optional)
     * @param  string $nuget_tags NuGet tags (optional)
     * @param  string $p2_plugin_name p2 plugin name (optional)
     * @param  string $pypi_classifiers PyPI classifiers (optional)
     * @param  string $pypi_description PyPI description (optional)
     * @param  string $pypi_keywords PyPI keywords (optional)
     * @param  string $pypi_summary PyPI summary (optional)
     * @param  string $rubygems_description RubyGems description (optional)
     * @param  string $rubygems_platform RubyGems platform (optional)
     * @param  string $rubygems_summary RubyGems summary (optional)
     * @param  string $yum_architecture Yum architecture (optional)
     *
     * @throws \NexusClient\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NexusClient\Model\PageComponentXO
     */
    public function search($continuation_token = null, $sort = null, $direction = null, $timeout = null, $q = null, $repository = null, $format = null, $group = null, $name = null, $version = null, $md5 = null, $sha1 = null, $sha256 = null, $sha512 = null, $prerelease = null, $conan_base_version = null, $conan_channel = null, $docker_image_name = null, $docker_image_tag = null, $docker_layer_id = null, $docker_content_digest = null, $maven_group_id = null, $maven_artifact_id = null, $maven_base_version = null, $maven_extension = null, $maven_classifier = null, $npm_scope = null, $nuget_id = null, $nuget_tags = null, $p2_plugin_name = null, $pypi_classifiers = null, $pypi_description = null, $pypi_keywords = null, $pypi_summary = null, $rubygems_description = null, $rubygems_platform = null, $rubygems_summary = null, $yum_architecture = null)
    {
        list($response) = $this->searchWithHttpInfo($continuation_token, $sort, $direction, $timeout, $q, $repository, $format, $group, $name, $version, $md5, $sha1, $sha256, $sha512, $prerelease, $conan_base_version, $conan_channel, $docker_image_name, $docker_image_tag, $docker_layer_id, $docker_content_digest, $maven_group_id, $maven_artifact_id, $maven_base_version, $maven_extension, $maven_classifier, $npm_scope, $nuget_id, $nuget_tags, $p2_plugin_name, $pypi_classifiers, $pypi_description, $pypi_keywords, $pypi_summary, $rubygems_description, $rubygems_platform, $rubygems_summary, $yum_architecture);
        return $response;
    }

    /**
     * Operation searchWithHttpInfo
     *
     * Search components
     *
     * @param  string $continuation_token A token returned by a prior request. If present, the next page of results are returned (optional)
     * @param  string $sort The field to sort the results against, if left empty, a sort based on match weight will be used. (optional)
     * @param  string $direction The direction to sort records in, defaults to ascending (&#39;asc&#39;) for all sort fields, except version, which defaults to descending (&#39;desc&#39;) (optional)
     * @param  int $timeout How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used. (optional)
     * @param  string $q Query by keyword (optional)
     * @param  string $repository Repository name (optional)
     * @param  string $format Query by format (optional)
     * @param  string $group Component group (optional)
     * @param  string $name Component name (optional)
     * @param  string $version Component version (optional)
     * @param  string $md5 Specific MD5 hash of component&#39;s asset (optional)
     * @param  string $sha1 Specific SHA-1 hash of component&#39;s asset (optional)
     * @param  string $sha256 Specific SHA-256 hash of component&#39;s asset (optional)
     * @param  string $sha512 Specific SHA-512 hash of component&#39;s asset (optional)
     * @param  string $prerelease Prerelease version flag (optional)
     * @param  string $conan_base_version baseVersion (optional)
     * @param  string $conan_channel channel (optional)
     * @param  string $docker_image_name Docker image name (optional)
     * @param  string $docker_image_tag Docker image tag (optional)
     * @param  string $docker_layer_id Docker layer ID (optional)
     * @param  string $docker_content_digest Docker content digest (optional)
     * @param  string $maven_group_id Maven groupId (optional)
     * @param  string $maven_artifact_id Maven artifactId (optional)
     * @param  string $maven_base_version Maven base version (optional)
     * @param  string $maven_extension Maven extension of component&#39;s asset (optional)
     * @param  string $maven_classifier Maven classifier of component&#39;s asset (optional)
     * @param  string $npm_scope npm scope (optional)
     * @param  string $nuget_id NuGet id (optional)
     * @param  string $nuget_tags NuGet tags (optional)
     * @param  string $p2_plugin_name p2 plugin name (optional)
     * @param  string $pypi_classifiers PyPI classifiers (optional)
     * @param  string $pypi_description PyPI description (optional)
     * @param  string $pypi_keywords PyPI keywords (optional)
     * @param  string $pypi_summary PyPI summary (optional)
     * @param  string $rubygems_description RubyGems description (optional)
     * @param  string $rubygems_platform RubyGems platform (optional)
     * @param  string $rubygems_summary RubyGems summary (optional)
     * @param  string $yum_architecture Yum architecture (optional)
     *
     * @throws \NexusClient\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NexusClient\Model\PageComponentXO, HTTP status code, HTTP response headers (array of strings)
     */
    public function searchWithHttpInfo($continuation_token = null, $sort = null, $direction = null, $timeout = null, $q = null, $repository = null, $format = null, $group = null, $name = null, $version = null, $md5 = null, $sha1 = null, $sha256 = null, $sha512 = null, $prerelease = null, $conan_base_version = null, $conan_channel = null, $docker_image_name = null, $docker_image_tag = null, $docker_layer_id = null, $docker_content_digest = null, $maven_group_id = null, $maven_artifact_id = null, $maven_base_version = null, $maven_extension = null, $maven_classifier = null, $npm_scope = null, $nuget_id = null, $nuget_tags = null, $p2_plugin_name = null, $pypi_classifiers = null, $pypi_description = null, $pypi_keywords = null, $pypi_summary = null, $rubygems_description = null, $rubygems_platform = null, $rubygems_summary = null, $yum_architecture = null)
    {
        $returnType = '\NexusClient\Model\PageComponentXO';
        $request = $this->searchRequest($continuation_token, $sort, $direction, $timeout, $q, $repository, $format, $group, $name, $version, $md5, $sha1, $sha256, $sha512, $prerelease, $conan_base_version, $conan_channel, $docker_image_name, $docker_image_tag, $docker_layer_id, $docker_content_digest, $maven_group_id, $maven_artifact_id, $maven_base_version, $maven_extension, $maven_classifier, $npm_scope, $nuget_id, $nuget_tags, $p2_plugin_name, $pypi_classifiers, $pypi_description, $pypi_keywords, $pypi_summary, $rubygems_description, $rubygems_platform, $rubygems_summary, $yum_architecture);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    $response->getBody()
                );
            }

            $responseBody = $response->getBody();
            if ($returnType === '\SplFileObject') {
                $content = $responseBody; //stream goes to serializer
            } else {
                $content = $responseBody->getContents();
                if ($returnType !== 'string') {
                    $content = json_decode($content);
                }
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\NexusClient\Model\PageComponentXO',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation searchAsync
     *
     * Search components
     *
     * @param  string $continuation_token A token returned by a prior request. If present, the next page of results are returned (optional)
     * @param  string $sort The field to sort the results against, if left empty, a sort based on match weight will be used. (optional)
     * @param  string $direction The direction to sort records in, defaults to ascending (&#39;asc&#39;) for all sort fields, except version, which defaults to descending (&#39;desc&#39;) (optional)
     * @param  int $timeout How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used. (optional)
     * @param  string $q Query by keyword (optional)
     * @param  string $repository Repository name (optional)
     * @param  string $format Query by format (optional)
     * @param  string $group Component group (optional)
     * @param  string $name Component name (optional)
     * @param  string $version Component version (optional)
     * @param  string $md5 Specific MD5 hash of component&#39;s asset (optional)
     * @param  string $sha1 Specific SHA-1 hash of component&#39;s asset (optional)
     * @param  string $sha256 Specific SHA-256 hash of component&#39;s asset (optional)
     * @param  string $sha512 Specific SHA-512 hash of component&#39;s asset (optional)
     * @param  string $prerelease Prerelease version flag (optional)
     * @param  string $conan_base_version baseVersion (optional)
     * @param  string $conan_channel channel (optional)
     * @param  string $docker_image_name Docker image name (optional)
     * @param  string $docker_image_tag Docker image tag (optional)
     * @param  string $docker_layer_id Docker layer ID (optional)
     * @param  string $docker_content_digest Docker content digest (optional)
     * @param  string $maven_group_id Maven groupId (optional)
     * @param  string $maven_artifact_id Maven artifactId (optional)
     * @param  string $maven_base_version Maven base version (optional)
     * @param  string $maven_extension Maven extension of component&#39;s asset (optional)
     * @param  string $maven_classifier Maven classifier of component&#39;s asset (optional)
     * @param  string $npm_scope npm scope (optional)
     * @param  string $nuget_id NuGet id (optional)
     * @param  string $nuget_tags NuGet tags (optional)
     * @param  string $p2_plugin_name p2 plugin name (optional)
     * @param  string $pypi_classifiers PyPI classifiers (optional)
     * @param  string $pypi_description PyPI description (optional)
     * @param  string $pypi_keywords PyPI keywords (optional)
     * @param  string $pypi_summary PyPI summary (optional)
     * @param  string $rubygems_description RubyGems description (optional)
     * @param  string $rubygems_platform RubyGems platform (optional)
     * @param  string $rubygems_summary RubyGems summary (optional)
     * @param  string $yum_architecture Yum architecture (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function searchAsync($continuation_token = null, $sort = null, $direction = null, $timeout = null, $q = null, $repository = null, $format = null, $group = null, $name = null, $version = null, $md5 = null, $sha1 = null, $sha256 = null, $sha512 = null, $prerelease = null, $conan_base_version = null, $conan_channel = null, $docker_image_name = null, $docker_image_tag = null, $docker_layer_id = null, $docker_content_digest = null, $maven_group_id = null, $maven_artifact_id = null, $maven_base_version = null, $maven_extension = null, $maven_classifier = null, $npm_scope = null, $nuget_id = null, $nuget_tags = null, $p2_plugin_name = null, $pypi_classifiers = null, $pypi_description = null, $pypi_keywords = null, $pypi_summary = null, $rubygems_description = null, $rubygems_platform = null, $rubygems_summary = null, $yum_architecture = null)
    {
        return $this->searchAsyncWithHttpInfo($continuation_token, $sort, $direction, $timeout, $q, $repository, $format, $group, $name, $version, $md5, $sha1, $sha256, $sha512, $prerelease, $conan_base_version, $conan_channel, $docker_image_name, $docker_image_tag, $docker_layer_id, $docker_content_digest, $maven_group_id, $maven_artifact_id, $maven_base_version, $maven_extension, $maven_classifier, $npm_scope, $nuget_id, $nuget_tags, $p2_plugin_name, $pypi_classifiers, $pypi_description, $pypi_keywords, $pypi_summary, $rubygems_description, $rubygems_platform, $rubygems_summary, $yum_architecture)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation searchAsyncWithHttpInfo
     *
     * Search components
     *
     * @param  string $continuation_token A token returned by a prior request. If present, the next page of results are returned (optional)
     * @param  string $sort The field to sort the results against, if left empty, a sort based on match weight will be used. (optional)
     * @param  string $direction The direction to sort records in, defaults to ascending (&#39;asc&#39;) for all sort fields, except version, which defaults to descending (&#39;desc&#39;) (optional)
     * @param  int $timeout How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used. (optional)
     * @param  string $q Query by keyword (optional)
     * @param  string $repository Repository name (optional)
     * @param  string $format Query by format (optional)
     * @param  string $group Component group (optional)
     * @param  string $name Component name (optional)
     * @param  string $version Component version (optional)
     * @param  string $md5 Specific MD5 hash of component&#39;s asset (optional)
     * @param  string $sha1 Specific SHA-1 hash of component&#39;s asset (optional)
     * @param  string $sha256 Specific SHA-256 hash of component&#39;s asset (optional)
     * @param  string $sha512 Specific SHA-512 hash of component&#39;s asset (optional)
     * @param  string $prerelease Prerelease version flag (optional)
     * @param  string $conan_base_version baseVersion (optional)
     * @param  string $conan_channel channel (optional)
     * @param  string $docker_image_name Docker image name (optional)
     * @param  string $docker_image_tag Docker image tag (optional)
     * @param  string $docker_layer_id Docker layer ID (optional)
     * @param  string $docker_content_digest Docker content digest (optional)
     * @param  string $maven_group_id Maven groupId (optional)
     * @param  string $maven_artifact_id Maven artifactId (optional)
     * @param  string $maven_base_version Maven base version (optional)
     * @param  string $maven_extension Maven extension of component&#39;s asset (optional)
     * @param  string $maven_classifier Maven classifier of component&#39;s asset (optional)
     * @param  string $npm_scope npm scope (optional)
     * @param  string $nuget_id NuGet id (optional)
     * @param  string $nuget_tags NuGet tags (optional)
     * @param  string $p2_plugin_name p2 plugin name (optional)
     * @param  string $pypi_classifiers PyPI classifiers (optional)
     * @param  string $pypi_description PyPI description (optional)
     * @param  string $pypi_keywords PyPI keywords (optional)
     * @param  string $pypi_summary PyPI summary (optional)
     * @param  string $rubygems_description RubyGems description (optional)
     * @param  string $rubygems_platform RubyGems platform (optional)
     * @param  string $rubygems_summary RubyGems summary (optional)
     * @param  string $yum_architecture Yum architecture (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function searchAsyncWithHttpInfo($continuation_token = null, $sort = null, $direction = null, $timeout = null, $q = null, $repository = null, $format = null, $group = null, $name = null, $version = null, $md5 = null, $sha1 = null, $sha256 = null, $sha512 = null, $prerelease = null, $conan_base_version = null, $conan_channel = null, $docker_image_name = null, $docker_image_tag = null, $docker_layer_id = null, $docker_content_digest = null, $maven_group_id = null, $maven_artifact_id = null, $maven_base_version = null, $maven_extension = null, $maven_classifier = null, $npm_scope = null, $nuget_id = null, $nuget_tags = null, $p2_plugin_name = null, $pypi_classifiers = null, $pypi_description = null, $pypi_keywords = null, $pypi_summary = null, $rubygems_description = null, $rubygems_platform = null, $rubygems_summary = null, $yum_architecture = null)
    {
        $returnType = '\NexusClient\Model\PageComponentXO';
        $request = $this->searchRequest($continuation_token, $sort, $direction, $timeout, $q, $repository, $format, $group, $name, $version, $md5, $sha1, $sha256, $sha512, $prerelease, $conan_base_version, $conan_channel, $docker_image_name, $docker_image_tag, $docker_layer_id, $docker_content_digest, $maven_group_id, $maven_artifact_id, $maven_base_version, $maven_extension, $maven_classifier, $npm_scope, $nuget_id, $nuget_tags, $p2_plugin_name, $pypi_classifiers, $pypi_description, $pypi_keywords, $pypi_summary, $rubygems_description, $rubygems_platform, $rubygems_summary, $yum_architecture);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    $responseBody = $response->getBody();
                    if ($returnType === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                        if ($returnType !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'search'
     *
     * @param  string $continuation_token A token returned by a prior request. If present, the next page of results are returned (optional)
     * @param  string $sort The field to sort the results against, if left empty, a sort based on match weight will be used. (optional)
     * @param  string $direction The direction to sort records in, defaults to ascending (&#39;asc&#39;) for all sort fields, except version, which defaults to descending (&#39;desc&#39;) (optional)
     * @param  int $timeout How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used. (optional)
     * @param  string $q Query by keyword (optional)
     * @param  string $repository Repository name (optional)
     * @param  string $format Query by format (optional)
     * @param  string $group Component group (optional)
     * @param  string $name Component name (optional)
     * @param  string $version Component version (optional)
     * @param  string $md5 Specific MD5 hash of component&#39;s asset (optional)
     * @param  string $sha1 Specific SHA-1 hash of component&#39;s asset (optional)
     * @param  string $sha256 Specific SHA-256 hash of component&#39;s asset (optional)
     * @param  string $sha512 Specific SHA-512 hash of component&#39;s asset (optional)
     * @param  string $prerelease Prerelease version flag (optional)
     * @param  string $conan_base_version baseVersion (optional)
     * @param  string $conan_channel channel (optional)
     * @param  string $docker_image_name Docker image name (optional)
     * @param  string $docker_image_tag Docker image tag (optional)
     * @param  string $docker_layer_id Docker layer ID (optional)
     * @param  string $docker_content_digest Docker content digest (optional)
     * @param  string $maven_group_id Maven groupId (optional)
     * @param  string $maven_artifact_id Maven artifactId (optional)
     * @param  string $maven_base_version Maven base version (optional)
     * @param  string $maven_extension Maven extension of component&#39;s asset (optional)
     * @param  string $maven_classifier Maven classifier of component&#39;s asset (optional)
     * @param  string $npm_scope npm scope (optional)
     * @param  string $nuget_id NuGet id (optional)
     * @param  string $nuget_tags NuGet tags (optional)
     * @param  string $p2_plugin_name p2 plugin name (optional)
     * @param  string $pypi_classifiers PyPI classifiers (optional)
     * @param  string $pypi_description PyPI description (optional)
     * @param  string $pypi_keywords PyPI keywords (optional)
     * @param  string $pypi_summary PyPI summary (optional)
     * @param  string $rubygems_description RubyGems description (optional)
     * @param  string $rubygems_platform RubyGems platform (optional)
     * @param  string $rubygems_summary RubyGems summary (optional)
     * @param  string $yum_architecture Yum architecture (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    protected function searchRequest($continuation_token = null, $sort = null, $direction = null, $timeout = null, $q = null, $repository = null, $format = null, $group = null, $name = null, $version = null, $md5 = null, $sha1 = null, $sha256 = null, $sha512 = null, $prerelease = null, $conan_base_version = null, $conan_channel = null, $docker_image_name = null, $docker_image_tag = null, $docker_layer_id = null, $docker_content_digest = null, $maven_group_id = null, $maven_artifact_id = null, $maven_base_version = null, $maven_extension = null, $maven_classifier = null, $npm_scope = null, $nuget_id = null, $nuget_tags = null, $p2_plugin_name = null, $pypi_classifiers = null, $pypi_description = null, $pypi_keywords = null, $pypi_summary = null, $rubygems_description = null, $rubygems_platform = null, $rubygems_summary = null, $yum_architecture = null)
    {

        $resourcePath = '/v1/search';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        if ($continuation_token !== null) {
            $queryParams['continuationToken'] = ObjectSerializer::toQueryValue($continuation_token);
        }
        // query params
        if ($sort !== null) {
            $queryParams['sort'] = ObjectSerializer::toQueryValue($sort);
        }
        // query params
        if ($direction !== null) {
            $queryParams['direction'] = ObjectSerializer::toQueryValue($direction);
        }
        // query params
        if ($timeout !== null) {
            $queryParams['timeout'] = ObjectSerializer::toQueryValue($timeout);
        }
        // query params
        if ($q !== null) {
            $queryParams['q'] = ObjectSerializer::toQueryValue($q);
        }
        // query params
        if ($repository !== null) {
            $queryParams['repository'] = ObjectSerializer::toQueryValue($repository);
        }
        // query params
        if ($format !== null) {
            $queryParams['format'] = ObjectSerializer::toQueryValue($format);
        }
        // query params
        if ($group !== null) {
            $queryParams['group'] = ObjectSerializer::toQueryValue($group);
        }
        // query params
        if ($name !== null) {
            $queryParams['name'] = ObjectSerializer::toQueryValue($name);
        }
        // query params
        if ($version !== null) {
            $queryParams['version'] = ObjectSerializer::toQueryValue($version);
        }
        // query params
        if ($md5 !== null) {
            $queryParams['md5'] = ObjectSerializer::toQueryValue($md5);
        }
        // query params
        if ($sha1 !== null) {
            $queryParams['sha1'] = ObjectSerializer::toQueryValue($sha1);
        }
        // query params
        if ($sha256 !== null) {
            $queryParams['sha256'] = ObjectSerializer::toQueryValue($sha256);
        }
        // query params
        if ($sha512 !== null) {
            $queryParams['sha512'] = ObjectSerializer::toQueryValue($sha512);
        }
        // query params
        if ($prerelease !== null) {
            $queryParams['prerelease'] = ObjectSerializer::toQueryValue($prerelease);
        }
        // query params
        if ($conan_base_version !== null) {
            $queryParams['conan.baseVersion'] = ObjectSerializer::toQueryValue($conan_base_version);
        }
        // query params
        if ($conan_channel !== null) {
            $queryParams['conan.channel'] = ObjectSerializer::toQueryValue($conan_channel);
        }
        // query params
        if ($docker_image_name !== null) {
            $queryParams['docker.imageName'] = ObjectSerializer::toQueryValue($docker_image_name);
        }
        // query params
        if ($docker_image_tag !== null) {
            $queryParams['docker.imageTag'] = ObjectSerializer::toQueryValue($docker_image_tag);
        }
        // query params
        if ($docker_layer_id !== null) {
            $queryParams['docker.layerId'] = ObjectSerializer::toQueryValue($docker_layer_id);
        }
        // query params
        if ($docker_content_digest !== null) {
            $queryParams['docker.contentDigest'] = ObjectSerializer::toQueryValue($docker_content_digest);
        }
        // query params
        if ($maven_group_id !== null) {
            $queryParams['maven.groupId'] = ObjectSerializer::toQueryValue($maven_group_id);
        }
        // query params
        if ($maven_artifact_id !== null) {
            $queryParams['maven.artifactId'] = ObjectSerializer::toQueryValue($maven_artifact_id);
        }
        // query params
        if ($maven_base_version !== null) {
            $queryParams['maven.baseVersion'] = ObjectSerializer::toQueryValue($maven_base_version);
        }
        // query params
        if ($maven_extension !== null) {
            $queryParams['maven.extension'] = ObjectSerializer::toQueryValue($maven_extension);
        }
        // query params
        if ($maven_classifier !== null) {
            $queryParams['maven.classifier'] = ObjectSerializer::toQueryValue($maven_classifier);
        }
        // query params
        if ($npm_scope !== null) {
            $queryParams['npm.scope'] = ObjectSerializer::toQueryValue($npm_scope);
        }
        // query params
        if ($nuget_id !== null) {
            $queryParams['nuget.id'] = ObjectSerializer::toQueryValue($nuget_id);
        }
        // query params
        if ($nuget_tags !== null) {
            $queryParams['nuget.tags'] = ObjectSerializer::toQueryValue($nuget_tags);
        }
        // query params
        if ($p2_plugin_name !== null) {
            $queryParams['p2.pluginName'] = ObjectSerializer::toQueryValue($p2_plugin_name);
        }
        // query params
        if ($pypi_classifiers !== null) {
            $queryParams['pypi.classifiers'] = ObjectSerializer::toQueryValue($pypi_classifiers);
        }
        // query params
        if ($pypi_description !== null) {
            $queryParams['pypi.description'] = ObjectSerializer::toQueryValue($pypi_description);
        }
        // query params
        if ($pypi_keywords !== null) {
            $queryParams['pypi.keywords'] = ObjectSerializer::toQueryValue($pypi_keywords);
        }
        // query params
        if ($pypi_summary !== null) {
            $queryParams['pypi.summary'] = ObjectSerializer::toQueryValue($pypi_summary);
        }
        // query params
        if ($rubygems_description !== null) {
            $queryParams['rubygems.description'] = ObjectSerializer::toQueryValue($rubygems_description);
        }
        // query params
        if ($rubygems_platform !== null) {
            $queryParams['rubygems.platform'] = ObjectSerializer::toQueryValue($rubygems_platform);
        }
        // query params
        if ($rubygems_summary !== null) {
            $queryParams['rubygems.summary'] = ObjectSerializer::toQueryValue($rubygems_summary);
        }
        // query params
        if ($yum_architecture !== null) {
            $queryParams['yum.architecture'] = ObjectSerializer::toQueryValue($yum_architecture);
        }


        // body params
        $_tempBody = null;

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json'],
                ['application/json']
            );
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            // $_tempBody is the method argument, if present
            $httpBody = $_tempBody;
            
            if($headers['Content-Type'] === 'application/json') {
                // \stdClass has no __toString(), so we should encode it manually
                if ($httpBody instanceof \stdClass) {
                    $httpBody = \GuzzleHttp\json_encode($httpBody);
                }
                // array has no __toString(), so we should encode it manually
                if(is_array($httpBody)) {
                    $httpBody = \GuzzleHttp\json_encode(ObjectSerializer::sanitizeForSerialization($httpBody));
                }
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $multipartContents[] = [
                        'name' => $formParamName,
                        'contents' => $formParamValue
                    ];
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);

            } else {
                // for HTTP post (form)
                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
            }
        }


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = \GuzzleHttp\Psr7\build_query($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation searchAndDownloadAssets
     *
     * Search and download asset
     *
     * @param  string $sort The field to sort the results against, if left empty and more than 1 result is returned, the request will fail. (optional)
     * @param  string $direction The direction to sort records in, defaults to ascending (&#39;asc&#39;) for all sort fields, except version, which defaults to descending (&#39;desc&#39;) (optional)
     * @param  int $timeout How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used. (optional)
     * @param  string $q Query by keyword (optional)
     * @param  string $repository Repository name (optional)
     * @param  string $format Query by format (optional)
     * @param  string $group Component group (optional)
     * @param  string $name Component name (optional)
     * @param  string $version Component version (optional)
     * @param  string $md5 Specific MD5 hash of component&#39;s asset (optional)
     * @param  string $sha1 Specific SHA-1 hash of component&#39;s asset (optional)
     * @param  string $sha256 Specific SHA-256 hash of component&#39;s asset (optional)
     * @param  string $sha512 Specific SHA-512 hash of component&#39;s asset (optional)
     * @param  string $prerelease Prerelease version flag (optional)
     * @param  string $conan_base_version baseVersion (optional)
     * @param  string $conan_channel channel (optional)
     * @param  string $docker_image_name Docker image name (optional)
     * @param  string $docker_image_tag Docker image tag (optional)
     * @param  string $docker_layer_id Docker layer ID (optional)
     * @param  string $docker_content_digest Docker content digest (optional)
     * @param  string $maven_group_id Maven groupId (optional)
     * @param  string $maven_artifact_id Maven artifactId (optional)
     * @param  string $maven_base_version Maven base version (optional)
     * @param  string $maven_extension Maven extension of component&#39;s asset (optional)
     * @param  string $maven_classifier Maven classifier of component&#39;s asset (optional)
     * @param  string $npm_scope npm scope (optional)
     * @param  string $nuget_id NuGet id (optional)
     * @param  string $nuget_tags NuGet tags (optional)
     * @param  string $p2_plugin_name p2 plugin name (optional)
     * @param  string $pypi_classifiers PyPI classifiers (optional)
     * @param  string $pypi_description PyPI description (optional)
     * @param  string $pypi_keywords PyPI keywords (optional)
     * @param  string $pypi_summary PyPI summary (optional)
     * @param  string $rubygems_description RubyGems description (optional)
     * @param  string $rubygems_platform RubyGems platform (optional)
     * @param  string $rubygems_summary RubyGems summary (optional)
     * @param  string $yum_architecture Yum architecture (optional)
     *
     * @throws \NexusClient\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return void
     */
    public function searchAndDownloadAssets($sort = null, $direction = null, $timeout = null, $q = null, $repository = null, $format = null, $group = null, $name = null, $version = null, $md5 = null, $sha1 = null, $sha256 = null, $sha512 = null, $prerelease = null, $conan_base_version = null, $conan_channel = null, $docker_image_name = null, $docker_image_tag = null, $docker_layer_id = null, $docker_content_digest = null, $maven_group_id = null, $maven_artifact_id = null, $maven_base_version = null, $maven_extension = null, $maven_classifier = null, $npm_scope = null, $nuget_id = null, $nuget_tags = null, $p2_plugin_name = null, $pypi_classifiers = null, $pypi_description = null, $pypi_keywords = null, $pypi_summary = null, $rubygems_description = null, $rubygems_platform = null, $rubygems_summary = null, $yum_architecture = null)
    {
        $this->searchAndDownloadAssetsWithHttpInfo($sort, $direction, $timeout, $q, $repository, $format, $group, $name, $version, $md5, $sha1, $sha256, $sha512, $prerelease, $conan_base_version, $conan_channel, $docker_image_name, $docker_image_tag, $docker_layer_id, $docker_content_digest, $maven_group_id, $maven_artifact_id, $maven_base_version, $maven_extension, $maven_classifier, $npm_scope, $nuget_id, $nuget_tags, $p2_plugin_name, $pypi_classifiers, $pypi_description, $pypi_keywords, $pypi_summary, $rubygems_description, $rubygems_platform, $rubygems_summary, $yum_architecture);
    }

    /**
     * Operation searchAndDownloadAssetsWithHttpInfo
     *
     * Search and download asset
     *
     * @param  string $sort The field to sort the results against, if left empty and more than 1 result is returned, the request will fail. (optional)
     * @param  string $direction The direction to sort records in, defaults to ascending (&#39;asc&#39;) for all sort fields, except version, which defaults to descending (&#39;desc&#39;) (optional)
     * @param  int $timeout How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used. (optional)
     * @param  string $q Query by keyword (optional)
     * @param  string $repository Repository name (optional)
     * @param  string $format Query by format (optional)
     * @param  string $group Component group (optional)
     * @param  string $name Component name (optional)
     * @param  string $version Component version (optional)
     * @param  string $md5 Specific MD5 hash of component&#39;s asset (optional)
     * @param  string $sha1 Specific SHA-1 hash of component&#39;s asset (optional)
     * @param  string $sha256 Specific SHA-256 hash of component&#39;s asset (optional)
     * @param  string $sha512 Specific SHA-512 hash of component&#39;s asset (optional)
     * @param  string $prerelease Prerelease version flag (optional)
     * @param  string $conan_base_version baseVersion (optional)
     * @param  string $conan_channel channel (optional)
     * @param  string $docker_image_name Docker image name (optional)
     * @param  string $docker_image_tag Docker image tag (optional)
     * @param  string $docker_layer_id Docker layer ID (optional)
     * @param  string $docker_content_digest Docker content digest (optional)
     * @param  string $maven_group_id Maven groupId (optional)
     * @param  string $maven_artifact_id Maven artifactId (optional)
     * @param  string $maven_base_version Maven base version (optional)
     * @param  string $maven_extension Maven extension of component&#39;s asset (optional)
     * @param  string $maven_classifier Maven classifier of component&#39;s asset (optional)
     * @param  string $npm_scope npm scope (optional)
     * @param  string $nuget_id NuGet id (optional)
     * @param  string $nuget_tags NuGet tags (optional)
     * @param  string $p2_plugin_name p2 plugin name (optional)
     * @param  string $pypi_classifiers PyPI classifiers (optional)
     * @param  string $pypi_description PyPI description (optional)
     * @param  string $pypi_keywords PyPI keywords (optional)
     * @param  string $pypi_summary PyPI summary (optional)
     * @param  string $rubygems_description RubyGems description (optional)
     * @param  string $rubygems_platform RubyGems platform (optional)
     * @param  string $rubygems_summary RubyGems summary (optional)
     * @param  string $yum_architecture Yum architecture (optional)
     *
     * @throws \NexusClient\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function searchAndDownloadAssetsWithHttpInfo($sort = null, $direction = null, $timeout = null, $q = null, $repository = null, $format = null, $group = null, $name = null, $version = null, $md5 = null, $sha1 = null, $sha256 = null, $sha512 = null, $prerelease = null, $conan_base_version = null, $conan_channel = null, $docker_image_name = null, $docker_image_tag = null, $docker_layer_id = null, $docker_content_digest = null, $maven_group_id = null, $maven_artifact_id = null, $maven_base_version = null, $maven_extension = null, $maven_classifier = null, $npm_scope = null, $nuget_id = null, $nuget_tags = null, $p2_plugin_name = null, $pypi_classifiers = null, $pypi_description = null, $pypi_keywords = null, $pypi_summary = null, $rubygems_description = null, $rubygems_platform = null, $rubygems_summary = null, $yum_architecture = null)
    {
        $returnType = '';
        $request = $this->searchAndDownloadAssetsRequest($sort, $direction, $timeout, $q, $repository, $format, $group, $name, $version, $md5, $sha1, $sha256, $sha512, $prerelease, $conan_base_version, $conan_channel, $docker_image_name, $docker_image_tag, $docker_layer_id, $docker_content_digest, $maven_group_id, $maven_artifact_id, $maven_base_version, $maven_extension, $maven_classifier, $npm_scope, $nuget_id, $nuget_tags, $p2_plugin_name, $pypi_classifiers, $pypi_description, $pypi_keywords, $pypi_summary, $rubygems_description, $rubygems_platform, $rubygems_summary, $yum_architecture);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    $response->getBody()
                );
            }

            return [null, $statusCode, $response->getHeaders()];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
            }
            throw $e;
        }
    }

    /**
     * Operation searchAndDownloadAssetsAsync
     *
     * Search and download asset
     *
     * @param  string $sort The field to sort the results against, if left empty and more than 1 result is returned, the request will fail. (optional)
     * @param  string $direction The direction to sort records in, defaults to ascending (&#39;asc&#39;) for all sort fields, except version, which defaults to descending (&#39;desc&#39;) (optional)
     * @param  int $timeout How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used. (optional)
     * @param  string $q Query by keyword (optional)
     * @param  string $repository Repository name (optional)
     * @param  string $format Query by format (optional)
     * @param  string $group Component group (optional)
     * @param  string $name Component name (optional)
     * @param  string $version Component version (optional)
     * @param  string $md5 Specific MD5 hash of component&#39;s asset (optional)
     * @param  string $sha1 Specific SHA-1 hash of component&#39;s asset (optional)
     * @param  string $sha256 Specific SHA-256 hash of component&#39;s asset (optional)
     * @param  string $sha512 Specific SHA-512 hash of component&#39;s asset (optional)
     * @param  string $prerelease Prerelease version flag (optional)
     * @param  string $conan_base_version baseVersion (optional)
     * @param  string $conan_channel channel (optional)
     * @param  string $docker_image_name Docker image name (optional)
     * @param  string $docker_image_tag Docker image tag (optional)
     * @param  string $docker_layer_id Docker layer ID (optional)
     * @param  string $docker_content_digest Docker content digest (optional)
     * @param  string $maven_group_id Maven groupId (optional)
     * @param  string $maven_artifact_id Maven artifactId (optional)
     * @param  string $maven_base_version Maven base version (optional)
     * @param  string $maven_extension Maven extension of component&#39;s asset (optional)
     * @param  string $maven_classifier Maven classifier of component&#39;s asset (optional)
     * @param  string $npm_scope npm scope (optional)
     * @param  string $nuget_id NuGet id (optional)
     * @param  string $nuget_tags NuGet tags (optional)
     * @param  string $p2_plugin_name p2 plugin name (optional)
     * @param  string $pypi_classifiers PyPI classifiers (optional)
     * @param  string $pypi_description PyPI description (optional)
     * @param  string $pypi_keywords PyPI keywords (optional)
     * @param  string $pypi_summary PyPI summary (optional)
     * @param  string $rubygems_description RubyGems description (optional)
     * @param  string $rubygems_platform RubyGems platform (optional)
     * @param  string $rubygems_summary RubyGems summary (optional)
     * @param  string $yum_architecture Yum architecture (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function searchAndDownloadAssetsAsync($sort = null, $direction = null, $timeout = null, $q = null, $repository = null, $format = null, $group = null, $name = null, $version = null, $md5 = null, $sha1 = null, $sha256 = null, $sha512 = null, $prerelease = null, $conan_base_version = null, $conan_channel = null, $docker_image_name = null, $docker_image_tag = null, $docker_layer_id = null, $docker_content_digest = null, $maven_group_id = null, $maven_artifact_id = null, $maven_base_version = null, $maven_extension = null, $maven_classifier = null, $npm_scope = null, $nuget_id = null, $nuget_tags = null, $p2_plugin_name = null, $pypi_classifiers = null, $pypi_description = null, $pypi_keywords = null, $pypi_summary = null, $rubygems_description = null, $rubygems_platform = null, $rubygems_summary = null, $yum_architecture = null)
    {
        return $this->searchAndDownloadAssetsAsyncWithHttpInfo($sort, $direction, $timeout, $q, $repository, $format, $group, $name, $version, $md5, $sha1, $sha256, $sha512, $prerelease, $conan_base_version, $conan_channel, $docker_image_name, $docker_image_tag, $docker_layer_id, $docker_content_digest, $maven_group_id, $maven_artifact_id, $maven_base_version, $maven_extension, $maven_classifier, $npm_scope, $nuget_id, $nuget_tags, $p2_plugin_name, $pypi_classifiers, $pypi_description, $pypi_keywords, $pypi_summary, $rubygems_description, $rubygems_platform, $rubygems_summary, $yum_architecture)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation searchAndDownloadAssetsAsyncWithHttpInfo
     *
     * Search and download asset
     *
     * @param  string $sort The field to sort the results against, if left empty and more than 1 result is returned, the request will fail. (optional)
     * @param  string $direction The direction to sort records in, defaults to ascending (&#39;asc&#39;) for all sort fields, except version, which defaults to descending (&#39;desc&#39;) (optional)
     * @param  int $timeout How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used. (optional)
     * @param  string $q Query by keyword (optional)
     * @param  string $repository Repository name (optional)
     * @param  string $format Query by format (optional)
     * @param  string $group Component group (optional)
     * @param  string $name Component name (optional)
     * @param  string $version Component version (optional)
     * @param  string $md5 Specific MD5 hash of component&#39;s asset (optional)
     * @param  string $sha1 Specific SHA-1 hash of component&#39;s asset (optional)
     * @param  string $sha256 Specific SHA-256 hash of component&#39;s asset (optional)
     * @param  string $sha512 Specific SHA-512 hash of component&#39;s asset (optional)
     * @param  string $prerelease Prerelease version flag (optional)
     * @param  string $conan_base_version baseVersion (optional)
     * @param  string $conan_channel channel (optional)
     * @param  string $docker_image_name Docker image name (optional)
     * @param  string $docker_image_tag Docker image tag (optional)
     * @param  string $docker_layer_id Docker layer ID (optional)
     * @param  string $docker_content_digest Docker content digest (optional)
     * @param  string $maven_group_id Maven groupId (optional)
     * @param  string $maven_artifact_id Maven artifactId (optional)
     * @param  string $maven_base_version Maven base version (optional)
     * @param  string $maven_extension Maven extension of component&#39;s asset (optional)
     * @param  string $maven_classifier Maven classifier of component&#39;s asset (optional)
     * @param  string $npm_scope npm scope (optional)
     * @param  string $nuget_id NuGet id (optional)
     * @param  string $nuget_tags NuGet tags (optional)
     * @param  string $p2_plugin_name p2 plugin name (optional)
     * @param  string $pypi_classifiers PyPI classifiers (optional)
     * @param  string $pypi_description PyPI description (optional)
     * @param  string $pypi_keywords PyPI keywords (optional)
     * @param  string $pypi_summary PyPI summary (optional)
     * @param  string $rubygems_description RubyGems description (optional)
     * @param  string $rubygems_platform RubyGems platform (optional)
     * @param  string $rubygems_summary RubyGems summary (optional)
     * @param  string $yum_architecture Yum architecture (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function searchAndDownloadAssetsAsyncWithHttpInfo($sort = null, $direction = null, $timeout = null, $q = null, $repository = null, $format = null, $group = null, $name = null, $version = null, $md5 = null, $sha1 = null, $sha256 = null, $sha512 = null, $prerelease = null, $conan_base_version = null, $conan_channel = null, $docker_image_name = null, $docker_image_tag = null, $docker_layer_id = null, $docker_content_digest = null, $maven_group_id = null, $maven_artifact_id = null, $maven_base_version = null, $maven_extension = null, $maven_classifier = null, $npm_scope = null, $nuget_id = null, $nuget_tags = null, $p2_plugin_name = null, $pypi_classifiers = null, $pypi_description = null, $pypi_keywords = null, $pypi_summary = null, $rubygems_description = null, $rubygems_platform = null, $rubygems_summary = null, $yum_architecture = null)
    {
        $returnType = '';
        $request = $this->searchAndDownloadAssetsRequest($sort, $direction, $timeout, $q, $repository, $format, $group, $name, $version, $md5, $sha1, $sha256, $sha512, $prerelease, $conan_base_version, $conan_channel, $docker_image_name, $docker_image_tag, $docker_layer_id, $docker_content_digest, $maven_group_id, $maven_artifact_id, $maven_base_version, $maven_extension, $maven_classifier, $npm_scope, $nuget_id, $nuget_tags, $p2_plugin_name, $pypi_classifiers, $pypi_description, $pypi_keywords, $pypi_summary, $rubygems_description, $rubygems_platform, $rubygems_summary, $yum_architecture);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    return [null, $response->getStatusCode(), $response->getHeaders()];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'searchAndDownloadAssets'
     *
     * @param  string $sort The field to sort the results against, if left empty and more than 1 result is returned, the request will fail. (optional)
     * @param  string $direction The direction to sort records in, defaults to ascending (&#39;asc&#39;) for all sort fields, except version, which defaults to descending (&#39;desc&#39;) (optional)
     * @param  int $timeout How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used. (optional)
     * @param  string $q Query by keyword (optional)
     * @param  string $repository Repository name (optional)
     * @param  string $format Query by format (optional)
     * @param  string $group Component group (optional)
     * @param  string $name Component name (optional)
     * @param  string $version Component version (optional)
     * @param  string $md5 Specific MD5 hash of component&#39;s asset (optional)
     * @param  string $sha1 Specific SHA-1 hash of component&#39;s asset (optional)
     * @param  string $sha256 Specific SHA-256 hash of component&#39;s asset (optional)
     * @param  string $sha512 Specific SHA-512 hash of component&#39;s asset (optional)
     * @param  string $prerelease Prerelease version flag (optional)
     * @param  string $conan_base_version baseVersion (optional)
     * @param  string $conan_channel channel (optional)
     * @param  string $docker_image_name Docker image name (optional)
     * @param  string $docker_image_tag Docker image tag (optional)
     * @param  string $docker_layer_id Docker layer ID (optional)
     * @param  string $docker_content_digest Docker content digest (optional)
     * @param  string $maven_group_id Maven groupId (optional)
     * @param  string $maven_artifact_id Maven artifactId (optional)
     * @param  string $maven_base_version Maven base version (optional)
     * @param  string $maven_extension Maven extension of component&#39;s asset (optional)
     * @param  string $maven_classifier Maven classifier of component&#39;s asset (optional)
     * @param  string $npm_scope npm scope (optional)
     * @param  string $nuget_id NuGet id (optional)
     * @param  string $nuget_tags NuGet tags (optional)
     * @param  string $p2_plugin_name p2 plugin name (optional)
     * @param  string $pypi_classifiers PyPI classifiers (optional)
     * @param  string $pypi_description PyPI description (optional)
     * @param  string $pypi_keywords PyPI keywords (optional)
     * @param  string $pypi_summary PyPI summary (optional)
     * @param  string $rubygems_description RubyGems description (optional)
     * @param  string $rubygems_platform RubyGems platform (optional)
     * @param  string $rubygems_summary RubyGems summary (optional)
     * @param  string $yum_architecture Yum architecture (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    protected function searchAndDownloadAssetsRequest($sort = null, $direction = null, $timeout = null, $q = null, $repository = null, $format = null, $group = null, $name = null, $version = null, $md5 = null, $sha1 = null, $sha256 = null, $sha512 = null, $prerelease = null, $conan_base_version = null, $conan_channel = null, $docker_image_name = null, $docker_image_tag = null, $docker_layer_id = null, $docker_content_digest = null, $maven_group_id = null, $maven_artifact_id = null, $maven_base_version = null, $maven_extension = null, $maven_classifier = null, $npm_scope = null, $nuget_id = null, $nuget_tags = null, $p2_plugin_name = null, $pypi_classifiers = null, $pypi_description = null, $pypi_keywords = null, $pypi_summary = null, $rubygems_description = null, $rubygems_platform = null, $rubygems_summary = null, $yum_architecture = null)
    {

        $resourcePath = '/v1/search/assets/download';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        if ($sort !== null) {
            $queryParams['sort'] = ObjectSerializer::toQueryValue($sort);
        }
        // query params
        if ($direction !== null) {
            $queryParams['direction'] = ObjectSerializer::toQueryValue($direction);
        }
        // query params
        if ($timeout !== null) {
            $queryParams['timeout'] = ObjectSerializer::toQueryValue($timeout);
        }
        // query params
        if ($q !== null) {
            $queryParams['q'] = ObjectSerializer::toQueryValue($q);
        }
        // query params
        if ($repository !== null) {
            $queryParams['repository'] = ObjectSerializer::toQueryValue($repository);
        }
        // query params
        if ($format !== null) {
            $queryParams['format'] = ObjectSerializer::toQueryValue($format);
        }
        // query params
        if ($group !== null) {
            $queryParams['group'] = ObjectSerializer::toQueryValue($group);
        }
        // query params
        if ($name !== null) {
            $queryParams['name'] = ObjectSerializer::toQueryValue($name);
        }
        // query params
        if ($version !== null) {
            $queryParams['version'] = ObjectSerializer::toQueryValue($version);
        }
        // query params
        if ($md5 !== null) {
            $queryParams['md5'] = ObjectSerializer::toQueryValue($md5);
        }
        // query params
        if ($sha1 !== null) {
            $queryParams['sha1'] = ObjectSerializer::toQueryValue($sha1);
        }
        // query params
        if ($sha256 !== null) {
            $queryParams['sha256'] = ObjectSerializer::toQueryValue($sha256);
        }
        // query params
        if ($sha512 !== null) {
            $queryParams['sha512'] = ObjectSerializer::toQueryValue($sha512);
        }
        // query params
        if ($prerelease !== null) {
            $queryParams['prerelease'] = ObjectSerializer::toQueryValue($prerelease);
        }
        // query params
        if ($conan_base_version !== null) {
            $queryParams['conan.baseVersion'] = ObjectSerializer::toQueryValue($conan_base_version);
        }
        // query params
        if ($conan_channel !== null) {
            $queryParams['conan.channel'] = ObjectSerializer::toQueryValue($conan_channel);
        }
        // query params
        if ($docker_image_name !== null) {
            $queryParams['docker.imageName'] = ObjectSerializer::toQueryValue($docker_image_name);
        }
        // query params
        if ($docker_image_tag !== null) {
            $queryParams['docker.imageTag'] = ObjectSerializer::toQueryValue($docker_image_tag);
        }
        // query params
        if ($docker_layer_id !== null) {
            $queryParams['docker.layerId'] = ObjectSerializer::toQueryValue($docker_layer_id);
        }
        // query params
        if ($docker_content_digest !== null) {
            $queryParams['docker.contentDigest'] = ObjectSerializer::toQueryValue($docker_content_digest);
        }
        // query params
        if ($maven_group_id !== null) {
            $queryParams['maven.groupId'] = ObjectSerializer::toQueryValue($maven_group_id);
        }
        // query params
        if ($maven_artifact_id !== null) {
            $queryParams['maven.artifactId'] = ObjectSerializer::toQueryValue($maven_artifact_id);
        }
        // query params
        if ($maven_base_version !== null) {
            $queryParams['maven.baseVersion'] = ObjectSerializer::toQueryValue($maven_base_version);
        }
        // query params
        if ($maven_extension !== null) {
            $queryParams['maven.extension'] = ObjectSerializer::toQueryValue($maven_extension);
        }
        // query params
        if ($maven_classifier !== null) {
            $queryParams['maven.classifier'] = ObjectSerializer::toQueryValue($maven_classifier);
        }
        // query params
        if ($npm_scope !== null) {
            $queryParams['npm.scope'] = ObjectSerializer::toQueryValue($npm_scope);
        }
        // query params
        if ($nuget_id !== null) {
            $queryParams['nuget.id'] = ObjectSerializer::toQueryValue($nuget_id);
        }
        // query params
        if ($nuget_tags !== null) {
            $queryParams['nuget.tags'] = ObjectSerializer::toQueryValue($nuget_tags);
        }
        // query params
        if ($p2_plugin_name !== null) {
            $queryParams['p2.pluginName'] = ObjectSerializer::toQueryValue($p2_plugin_name);
        }
        // query params
        if ($pypi_classifiers !== null) {
            $queryParams['pypi.classifiers'] = ObjectSerializer::toQueryValue($pypi_classifiers);
        }
        // query params
        if ($pypi_description !== null) {
            $queryParams['pypi.description'] = ObjectSerializer::toQueryValue($pypi_description);
        }
        // query params
        if ($pypi_keywords !== null) {
            $queryParams['pypi.keywords'] = ObjectSerializer::toQueryValue($pypi_keywords);
        }
        // query params
        if ($pypi_summary !== null) {
            $queryParams['pypi.summary'] = ObjectSerializer::toQueryValue($pypi_summary);
        }
        // query params
        if ($rubygems_description !== null) {
            $queryParams['rubygems.description'] = ObjectSerializer::toQueryValue($rubygems_description);
        }
        // query params
        if ($rubygems_platform !== null) {
            $queryParams['rubygems.platform'] = ObjectSerializer::toQueryValue($rubygems_platform);
        }
        // query params
        if ($rubygems_summary !== null) {
            $queryParams['rubygems.summary'] = ObjectSerializer::toQueryValue($rubygems_summary);
        }
        // query params
        if ($yum_architecture !== null) {
            $queryParams['yum.architecture'] = ObjectSerializer::toQueryValue($yum_architecture);
        }


        // body params
        $_tempBody = null;

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json'],
                ['application/json']
            );
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            // $_tempBody is the method argument, if present
            $httpBody = $_tempBody;
            
            if($headers['Content-Type'] === 'application/json') {
                // \stdClass has no __toString(), so we should encode it manually
                if ($httpBody instanceof \stdClass) {
                    $httpBody = \GuzzleHttp\json_encode($httpBody);
                }
                // array has no __toString(), so we should encode it manually
                if(is_array($httpBody)) {
                    $httpBody = \GuzzleHttp\json_encode(ObjectSerializer::sanitizeForSerialization($httpBody));
                }
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $multipartContents[] = [
                        'name' => $formParamName,
                        'contents' => $formParamValue
                    ];
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);

            } else {
                // for HTTP post (form)
                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
            }
        }


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = \GuzzleHttp\Psr7\build_query($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation searchAssets
     *
     * Search assets
     *
     * @param  string $continuation_token A token returned by a prior request. If present, the next page of results are returned (optional)
     * @param  string $sort The field to sort the results against, if left empty, a sort based on match weight will be used. (optional)
     * @param  string $direction The direction to sort records in, defaults to ascending (&#39;asc&#39;) for all sort fields, except version, which defaults to descending (&#39;desc&#39;) (optional)
     * @param  int $timeout How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used. (optional)
     * @param  string $q Query by keyword (optional)
     * @param  string $repository Repository name (optional)
     * @param  string $format Query by format (optional)
     * @param  string $group Component group (optional)
     * @param  string $name Component name (optional)
     * @param  string $version Component version (optional)
     * @param  string $md5 Specific MD5 hash of component&#39;s asset (optional)
     * @param  string $sha1 Specific SHA-1 hash of component&#39;s asset (optional)
     * @param  string $sha256 Specific SHA-256 hash of component&#39;s asset (optional)
     * @param  string $sha512 Specific SHA-512 hash of component&#39;s asset (optional)
     * @param  string $prerelease Prerelease version flag (optional)
     * @param  string $conan_base_version baseVersion (optional)
     * @param  string $conan_channel channel (optional)
     * @param  string $docker_image_name Docker image name (optional)
     * @param  string $docker_image_tag Docker image tag (optional)
     * @param  string $docker_layer_id Docker layer ID (optional)
     * @param  string $docker_content_digest Docker content digest (optional)
     * @param  string $maven_group_id Maven groupId (optional)
     * @param  string $maven_artifact_id Maven artifactId (optional)
     * @param  string $maven_base_version Maven base version (optional)
     * @param  string $maven_extension Maven extension of component&#39;s asset (optional)
     * @param  string $maven_classifier Maven classifier of component&#39;s asset (optional)
     * @param  string $npm_scope npm scope (optional)
     * @param  string $nuget_id NuGet id (optional)
     * @param  string $nuget_tags NuGet tags (optional)
     * @param  string $p2_plugin_name p2 plugin name (optional)
     * @param  string $pypi_classifiers PyPI classifiers (optional)
     * @param  string $pypi_description PyPI description (optional)
     * @param  string $pypi_keywords PyPI keywords (optional)
     * @param  string $pypi_summary PyPI summary (optional)
     * @param  string $rubygems_description RubyGems description (optional)
     * @param  string $rubygems_platform RubyGems platform (optional)
     * @param  string $rubygems_summary RubyGems summary (optional)
     * @param  string $yum_architecture Yum architecture (optional)
     *
     * @throws \NexusClient\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NexusClient\Model\PageAssetXO
     */
    public function searchAssets($continuation_token = null, $sort = null, $direction = null, $timeout = null, $q = null, $repository = null, $format = null, $group = null, $name = null, $version = null, $md5 = null, $sha1 = null, $sha256 = null, $sha512 = null, $prerelease = null, $conan_base_version = null, $conan_channel = null, $docker_image_name = null, $docker_image_tag = null, $docker_layer_id = null, $docker_content_digest = null, $maven_group_id = null, $maven_artifact_id = null, $maven_base_version = null, $maven_extension = null, $maven_classifier = null, $npm_scope = null, $nuget_id = null, $nuget_tags = null, $p2_plugin_name = null, $pypi_classifiers = null, $pypi_description = null, $pypi_keywords = null, $pypi_summary = null, $rubygems_description = null, $rubygems_platform = null, $rubygems_summary = null, $yum_architecture = null)
    {
        list($response) = $this->searchAssetsWithHttpInfo($continuation_token, $sort, $direction, $timeout, $q, $repository, $format, $group, $name, $version, $md5, $sha1, $sha256, $sha512, $prerelease, $conan_base_version, $conan_channel, $docker_image_name, $docker_image_tag, $docker_layer_id, $docker_content_digest, $maven_group_id, $maven_artifact_id, $maven_base_version, $maven_extension, $maven_classifier, $npm_scope, $nuget_id, $nuget_tags, $p2_plugin_name, $pypi_classifiers, $pypi_description, $pypi_keywords, $pypi_summary, $rubygems_description, $rubygems_platform, $rubygems_summary, $yum_architecture);
        return $response;
    }

    /**
     * Operation searchAssetsWithHttpInfo
     *
     * Search assets
     *
     * @param  string $continuation_token A token returned by a prior request. If present, the next page of results are returned (optional)
     * @param  string $sort The field to sort the results against, if left empty, a sort based on match weight will be used. (optional)
     * @param  string $direction The direction to sort records in, defaults to ascending (&#39;asc&#39;) for all sort fields, except version, which defaults to descending (&#39;desc&#39;) (optional)
     * @param  int $timeout How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used. (optional)
     * @param  string $q Query by keyword (optional)
     * @param  string $repository Repository name (optional)
     * @param  string $format Query by format (optional)
     * @param  string $group Component group (optional)
     * @param  string $name Component name (optional)
     * @param  string $version Component version (optional)
     * @param  string $md5 Specific MD5 hash of component&#39;s asset (optional)
     * @param  string $sha1 Specific SHA-1 hash of component&#39;s asset (optional)
     * @param  string $sha256 Specific SHA-256 hash of component&#39;s asset (optional)
     * @param  string $sha512 Specific SHA-512 hash of component&#39;s asset (optional)
     * @param  string $prerelease Prerelease version flag (optional)
     * @param  string $conan_base_version baseVersion (optional)
     * @param  string $conan_channel channel (optional)
     * @param  string $docker_image_name Docker image name (optional)
     * @param  string $docker_image_tag Docker image tag (optional)
     * @param  string $docker_layer_id Docker layer ID (optional)
     * @param  string $docker_content_digest Docker content digest (optional)
     * @param  string $maven_group_id Maven groupId (optional)
     * @param  string $maven_artifact_id Maven artifactId (optional)
     * @param  string $maven_base_version Maven base version (optional)
     * @param  string $maven_extension Maven extension of component&#39;s asset (optional)
     * @param  string $maven_classifier Maven classifier of component&#39;s asset (optional)
     * @param  string $npm_scope npm scope (optional)
     * @param  string $nuget_id NuGet id (optional)
     * @param  string $nuget_tags NuGet tags (optional)
     * @param  string $p2_plugin_name p2 plugin name (optional)
     * @param  string $pypi_classifiers PyPI classifiers (optional)
     * @param  string $pypi_description PyPI description (optional)
     * @param  string $pypi_keywords PyPI keywords (optional)
     * @param  string $pypi_summary PyPI summary (optional)
     * @param  string $rubygems_description RubyGems description (optional)
     * @param  string $rubygems_platform RubyGems platform (optional)
     * @param  string $rubygems_summary RubyGems summary (optional)
     * @param  string $yum_architecture Yum architecture (optional)
     *
     * @throws \NexusClient\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NexusClient\Model\PageAssetXO, HTTP status code, HTTP response headers (array of strings)
     */
    public function searchAssetsWithHttpInfo($continuation_token = null, $sort = null, $direction = null, $timeout = null, $q = null, $repository = null, $format = null, $group = null, $name = null, $version = null, $md5 = null, $sha1 = null, $sha256 = null, $sha512 = null, $prerelease = null, $conan_base_version = null, $conan_channel = null, $docker_image_name = null, $docker_image_tag = null, $docker_layer_id = null, $docker_content_digest = null, $maven_group_id = null, $maven_artifact_id = null, $maven_base_version = null, $maven_extension = null, $maven_classifier = null, $npm_scope = null, $nuget_id = null, $nuget_tags = null, $p2_plugin_name = null, $pypi_classifiers = null, $pypi_description = null, $pypi_keywords = null, $pypi_summary = null, $rubygems_description = null, $rubygems_platform = null, $rubygems_summary = null, $yum_architecture = null)
    {
        $returnType = '\NexusClient\Model\PageAssetXO';
        $request = $this->searchAssetsRequest($continuation_token, $sort, $direction, $timeout, $q, $repository, $format, $group, $name, $version, $md5, $sha1, $sha256, $sha512, $prerelease, $conan_base_version, $conan_channel, $docker_image_name, $docker_image_tag, $docker_layer_id, $docker_content_digest, $maven_group_id, $maven_artifact_id, $maven_base_version, $maven_extension, $maven_classifier, $npm_scope, $nuget_id, $nuget_tags, $p2_plugin_name, $pypi_classifiers, $pypi_description, $pypi_keywords, $pypi_summary, $rubygems_description, $rubygems_platform, $rubygems_summary, $yum_architecture);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    $response->getBody()
                );
            }

            $responseBody = $response->getBody();
            if ($returnType === '\SplFileObject') {
                $content = $responseBody; //stream goes to serializer
            } else {
                $content = $responseBody->getContents();
                if ($returnType !== 'string') {
                    $content = json_decode($content);
                }
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\NexusClient\Model\PageAssetXO',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation searchAssetsAsync
     *
     * Search assets
     *
     * @param  string $continuation_token A token returned by a prior request. If present, the next page of results are returned (optional)
     * @param  string $sort The field to sort the results against, if left empty, a sort based on match weight will be used. (optional)
     * @param  string $direction The direction to sort records in, defaults to ascending (&#39;asc&#39;) for all sort fields, except version, which defaults to descending (&#39;desc&#39;) (optional)
     * @param  int $timeout How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used. (optional)
     * @param  string $q Query by keyword (optional)
     * @param  string $repository Repository name (optional)
     * @param  string $format Query by format (optional)
     * @param  string $group Component group (optional)
     * @param  string $name Component name (optional)
     * @param  string $version Component version (optional)
     * @param  string $md5 Specific MD5 hash of component&#39;s asset (optional)
     * @param  string $sha1 Specific SHA-1 hash of component&#39;s asset (optional)
     * @param  string $sha256 Specific SHA-256 hash of component&#39;s asset (optional)
     * @param  string $sha512 Specific SHA-512 hash of component&#39;s asset (optional)
     * @param  string $prerelease Prerelease version flag (optional)
     * @param  string $conan_base_version baseVersion (optional)
     * @param  string $conan_channel channel (optional)
     * @param  string $docker_image_name Docker image name (optional)
     * @param  string $docker_image_tag Docker image tag (optional)
     * @param  string $docker_layer_id Docker layer ID (optional)
     * @param  string $docker_content_digest Docker content digest (optional)
     * @param  string $maven_group_id Maven groupId (optional)
     * @param  string $maven_artifact_id Maven artifactId (optional)
     * @param  string $maven_base_version Maven base version (optional)
     * @param  string $maven_extension Maven extension of component&#39;s asset (optional)
     * @param  string $maven_classifier Maven classifier of component&#39;s asset (optional)
     * @param  string $npm_scope npm scope (optional)
     * @param  string $nuget_id NuGet id (optional)
     * @param  string $nuget_tags NuGet tags (optional)
     * @param  string $p2_plugin_name p2 plugin name (optional)
     * @param  string $pypi_classifiers PyPI classifiers (optional)
     * @param  string $pypi_description PyPI description (optional)
     * @param  string $pypi_keywords PyPI keywords (optional)
     * @param  string $pypi_summary PyPI summary (optional)
     * @param  string $rubygems_description RubyGems description (optional)
     * @param  string $rubygems_platform RubyGems platform (optional)
     * @param  string $rubygems_summary RubyGems summary (optional)
     * @param  string $yum_architecture Yum architecture (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function searchAssetsAsync($continuation_token = null, $sort = null, $direction = null, $timeout = null, $q = null, $repository = null, $format = null, $group = null, $name = null, $version = null, $md5 = null, $sha1 = null, $sha256 = null, $sha512 = null, $prerelease = null, $conan_base_version = null, $conan_channel = null, $docker_image_name = null, $docker_image_tag = null, $docker_layer_id = null, $docker_content_digest = null, $maven_group_id = null, $maven_artifact_id = null, $maven_base_version = null, $maven_extension = null, $maven_classifier = null, $npm_scope = null, $nuget_id = null, $nuget_tags = null, $p2_plugin_name = null, $pypi_classifiers = null, $pypi_description = null, $pypi_keywords = null, $pypi_summary = null, $rubygems_description = null, $rubygems_platform = null, $rubygems_summary = null, $yum_architecture = null)
    {
        return $this->searchAssetsAsyncWithHttpInfo($continuation_token, $sort, $direction, $timeout, $q, $repository, $format, $group, $name, $version, $md5, $sha1, $sha256, $sha512, $prerelease, $conan_base_version, $conan_channel, $docker_image_name, $docker_image_tag, $docker_layer_id, $docker_content_digest, $maven_group_id, $maven_artifact_id, $maven_base_version, $maven_extension, $maven_classifier, $npm_scope, $nuget_id, $nuget_tags, $p2_plugin_name, $pypi_classifiers, $pypi_description, $pypi_keywords, $pypi_summary, $rubygems_description, $rubygems_platform, $rubygems_summary, $yum_architecture)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation searchAssetsAsyncWithHttpInfo
     *
     * Search assets
     *
     * @param  string $continuation_token A token returned by a prior request. If present, the next page of results are returned (optional)
     * @param  string $sort The field to sort the results against, if left empty, a sort based on match weight will be used. (optional)
     * @param  string $direction The direction to sort records in, defaults to ascending (&#39;asc&#39;) for all sort fields, except version, which defaults to descending (&#39;desc&#39;) (optional)
     * @param  int $timeout How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used. (optional)
     * @param  string $q Query by keyword (optional)
     * @param  string $repository Repository name (optional)
     * @param  string $format Query by format (optional)
     * @param  string $group Component group (optional)
     * @param  string $name Component name (optional)
     * @param  string $version Component version (optional)
     * @param  string $md5 Specific MD5 hash of component&#39;s asset (optional)
     * @param  string $sha1 Specific SHA-1 hash of component&#39;s asset (optional)
     * @param  string $sha256 Specific SHA-256 hash of component&#39;s asset (optional)
     * @param  string $sha512 Specific SHA-512 hash of component&#39;s asset (optional)
     * @param  string $prerelease Prerelease version flag (optional)
     * @param  string $conan_base_version baseVersion (optional)
     * @param  string $conan_channel channel (optional)
     * @param  string $docker_image_name Docker image name (optional)
     * @param  string $docker_image_tag Docker image tag (optional)
     * @param  string $docker_layer_id Docker layer ID (optional)
     * @param  string $docker_content_digest Docker content digest (optional)
     * @param  string $maven_group_id Maven groupId (optional)
     * @param  string $maven_artifact_id Maven artifactId (optional)
     * @param  string $maven_base_version Maven base version (optional)
     * @param  string $maven_extension Maven extension of component&#39;s asset (optional)
     * @param  string $maven_classifier Maven classifier of component&#39;s asset (optional)
     * @param  string $npm_scope npm scope (optional)
     * @param  string $nuget_id NuGet id (optional)
     * @param  string $nuget_tags NuGet tags (optional)
     * @param  string $p2_plugin_name p2 plugin name (optional)
     * @param  string $pypi_classifiers PyPI classifiers (optional)
     * @param  string $pypi_description PyPI description (optional)
     * @param  string $pypi_keywords PyPI keywords (optional)
     * @param  string $pypi_summary PyPI summary (optional)
     * @param  string $rubygems_description RubyGems description (optional)
     * @param  string $rubygems_platform RubyGems platform (optional)
     * @param  string $rubygems_summary RubyGems summary (optional)
     * @param  string $yum_architecture Yum architecture (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function searchAssetsAsyncWithHttpInfo($continuation_token = null, $sort = null, $direction = null, $timeout = null, $q = null, $repository = null, $format = null, $group = null, $name = null, $version = null, $md5 = null, $sha1 = null, $sha256 = null, $sha512 = null, $prerelease = null, $conan_base_version = null, $conan_channel = null, $docker_image_name = null, $docker_image_tag = null, $docker_layer_id = null, $docker_content_digest = null, $maven_group_id = null, $maven_artifact_id = null, $maven_base_version = null, $maven_extension = null, $maven_classifier = null, $npm_scope = null, $nuget_id = null, $nuget_tags = null, $p2_plugin_name = null, $pypi_classifiers = null, $pypi_description = null, $pypi_keywords = null, $pypi_summary = null, $rubygems_description = null, $rubygems_platform = null, $rubygems_summary = null, $yum_architecture = null)
    {
        $returnType = '\NexusClient\Model\PageAssetXO';
        $request = $this->searchAssetsRequest($continuation_token, $sort, $direction, $timeout, $q, $repository, $format, $group, $name, $version, $md5, $sha1, $sha256, $sha512, $prerelease, $conan_base_version, $conan_channel, $docker_image_name, $docker_image_tag, $docker_layer_id, $docker_content_digest, $maven_group_id, $maven_artifact_id, $maven_base_version, $maven_extension, $maven_classifier, $npm_scope, $nuget_id, $nuget_tags, $p2_plugin_name, $pypi_classifiers, $pypi_description, $pypi_keywords, $pypi_summary, $rubygems_description, $rubygems_platform, $rubygems_summary, $yum_architecture);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    $responseBody = $response->getBody();
                    if ($returnType === '\SplFileObject') {
                        $content = $responseBody; //stream goes to serializer
                    } else {
                        $content = $responseBody->getContents();
                        if ($returnType !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'searchAssets'
     *
     * @param  string $continuation_token A token returned by a prior request. If present, the next page of results are returned (optional)
     * @param  string $sort The field to sort the results against, if left empty, a sort based on match weight will be used. (optional)
     * @param  string $direction The direction to sort records in, defaults to ascending (&#39;asc&#39;) for all sort fields, except version, which defaults to descending (&#39;desc&#39;) (optional)
     * @param  int $timeout How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used. (optional)
     * @param  string $q Query by keyword (optional)
     * @param  string $repository Repository name (optional)
     * @param  string $format Query by format (optional)
     * @param  string $group Component group (optional)
     * @param  string $name Component name (optional)
     * @param  string $version Component version (optional)
     * @param  string $md5 Specific MD5 hash of component&#39;s asset (optional)
     * @param  string $sha1 Specific SHA-1 hash of component&#39;s asset (optional)
     * @param  string $sha256 Specific SHA-256 hash of component&#39;s asset (optional)
     * @param  string $sha512 Specific SHA-512 hash of component&#39;s asset (optional)
     * @param  string $prerelease Prerelease version flag (optional)
     * @param  string $conan_base_version baseVersion (optional)
     * @param  string $conan_channel channel (optional)
     * @param  string $docker_image_name Docker image name (optional)
     * @param  string $docker_image_tag Docker image tag (optional)
     * @param  string $docker_layer_id Docker layer ID (optional)
     * @param  string $docker_content_digest Docker content digest (optional)
     * @param  string $maven_group_id Maven groupId (optional)
     * @param  string $maven_artifact_id Maven artifactId (optional)
     * @param  string $maven_base_version Maven base version (optional)
     * @param  string $maven_extension Maven extension of component&#39;s asset (optional)
     * @param  string $maven_classifier Maven classifier of component&#39;s asset (optional)
     * @param  string $npm_scope npm scope (optional)
     * @param  string $nuget_id NuGet id (optional)
     * @param  string $nuget_tags NuGet tags (optional)
     * @param  string $p2_plugin_name p2 plugin name (optional)
     * @param  string $pypi_classifiers PyPI classifiers (optional)
     * @param  string $pypi_description PyPI description (optional)
     * @param  string $pypi_keywords PyPI keywords (optional)
     * @param  string $pypi_summary PyPI summary (optional)
     * @param  string $rubygems_description RubyGems description (optional)
     * @param  string $rubygems_platform RubyGems platform (optional)
     * @param  string $rubygems_summary RubyGems summary (optional)
     * @param  string $yum_architecture Yum architecture (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    protected function searchAssetsRequest($continuation_token = null, $sort = null, $direction = null, $timeout = null, $q = null, $repository = null, $format = null, $group = null, $name = null, $version = null, $md5 = null, $sha1 = null, $sha256 = null, $sha512 = null, $prerelease = null, $conan_base_version = null, $conan_channel = null, $docker_image_name = null, $docker_image_tag = null, $docker_layer_id = null, $docker_content_digest = null, $maven_group_id = null, $maven_artifact_id = null, $maven_base_version = null, $maven_extension = null, $maven_classifier = null, $npm_scope = null, $nuget_id = null, $nuget_tags = null, $p2_plugin_name = null, $pypi_classifiers = null, $pypi_description = null, $pypi_keywords = null, $pypi_summary = null, $rubygems_description = null, $rubygems_platform = null, $rubygems_summary = null, $yum_architecture = null)
    {

        $resourcePath = '/v1/search/assets';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        if ($continuation_token !== null) {
            $queryParams['continuationToken'] = ObjectSerializer::toQueryValue($continuation_token);
        }
        // query params
        if ($sort !== null) {
            $queryParams['sort'] = ObjectSerializer::toQueryValue($sort);
        }
        // query params
        if ($direction !== null) {
            $queryParams['direction'] = ObjectSerializer::toQueryValue($direction);
        }
        // query params
        if ($timeout !== null) {
            $queryParams['timeout'] = ObjectSerializer::toQueryValue($timeout);
        }
        // query params
        if ($q !== null) {
            $queryParams['q'] = ObjectSerializer::toQueryValue($q);
        }
        // query params
        if ($repository !== null) {
            $queryParams['repository'] = ObjectSerializer::toQueryValue($repository);
        }
        // query params
        if ($format !== null) {
            $queryParams['format'] = ObjectSerializer::toQueryValue($format);
        }
        // query params
        if ($group !== null) {
            $queryParams['group'] = ObjectSerializer::toQueryValue($group);
        }
        // query params
        if ($name !== null) {
            $queryParams['name'] = ObjectSerializer::toQueryValue($name);
        }
        // query params
        if ($version !== null) {
            $queryParams['version'] = ObjectSerializer::toQueryValue($version);
        }
        // query params
        if ($md5 !== null) {
            $queryParams['md5'] = ObjectSerializer::toQueryValue($md5);
        }
        // query params
        if ($sha1 !== null) {
            $queryParams['sha1'] = ObjectSerializer::toQueryValue($sha1);
        }
        // query params
        if ($sha256 !== null) {
            $queryParams['sha256'] = ObjectSerializer::toQueryValue($sha256);
        }
        // query params
        if ($sha512 !== null) {
            $queryParams['sha512'] = ObjectSerializer::toQueryValue($sha512);
        }
        // query params
        if ($prerelease !== null) {
            $queryParams['prerelease'] = ObjectSerializer::toQueryValue($prerelease);
        }
        // query params
        if ($conan_base_version !== null) {
            $queryParams['conan.baseVersion'] = ObjectSerializer::toQueryValue($conan_base_version);
        }
        // query params
        if ($conan_channel !== null) {
            $queryParams['conan.channel'] = ObjectSerializer::toQueryValue($conan_channel);
        }
        // query params
        if ($docker_image_name !== null) {
            $queryParams['docker.imageName'] = ObjectSerializer::toQueryValue($docker_image_name);
        }
        // query params
        if ($docker_image_tag !== null) {
            $queryParams['docker.imageTag'] = ObjectSerializer::toQueryValue($docker_image_tag);
        }
        // query params
        if ($docker_layer_id !== null) {
            $queryParams['docker.layerId'] = ObjectSerializer::toQueryValue($docker_layer_id);
        }
        // query params
        if ($docker_content_digest !== null) {
            $queryParams['docker.contentDigest'] = ObjectSerializer::toQueryValue($docker_content_digest);
        }
        // query params
        if ($maven_group_id !== null) {
            $queryParams['maven.groupId'] = ObjectSerializer::toQueryValue($maven_group_id);
        }
        // query params
        if ($maven_artifact_id !== null) {
            $queryParams['maven.artifactId'] = ObjectSerializer::toQueryValue($maven_artifact_id);
        }
        // query params
        if ($maven_base_version !== null) {
            $queryParams['maven.baseVersion'] = ObjectSerializer::toQueryValue($maven_base_version);
        }
        // query params
        if ($maven_extension !== null) {
            $queryParams['maven.extension'] = ObjectSerializer::toQueryValue($maven_extension);
        }
        // query params
        if ($maven_classifier !== null) {
            $queryParams['maven.classifier'] = ObjectSerializer::toQueryValue($maven_classifier);
        }
        // query params
        if ($npm_scope !== null) {
            $queryParams['npm.scope'] = ObjectSerializer::toQueryValue($npm_scope);
        }
        // query params
        if ($nuget_id !== null) {
            $queryParams['nuget.id'] = ObjectSerializer::toQueryValue($nuget_id);
        }
        // query params
        if ($nuget_tags !== null) {
            $queryParams['nuget.tags'] = ObjectSerializer::toQueryValue($nuget_tags);
        }
        // query params
        if ($p2_plugin_name !== null) {
            $queryParams['p2.pluginName'] = ObjectSerializer::toQueryValue($p2_plugin_name);
        }
        // query params
        if ($pypi_classifiers !== null) {
            $queryParams['pypi.classifiers'] = ObjectSerializer::toQueryValue($pypi_classifiers);
        }
        // query params
        if ($pypi_description !== null) {
            $queryParams['pypi.description'] = ObjectSerializer::toQueryValue($pypi_description);
        }
        // query params
        if ($pypi_keywords !== null) {
            $queryParams['pypi.keywords'] = ObjectSerializer::toQueryValue($pypi_keywords);
        }
        // query params
        if ($pypi_summary !== null) {
            $queryParams['pypi.summary'] = ObjectSerializer::toQueryValue($pypi_summary);
        }
        // query params
        if ($rubygems_description !== null) {
            $queryParams['rubygems.description'] = ObjectSerializer::toQueryValue($rubygems_description);
        }
        // query params
        if ($rubygems_platform !== null) {
            $queryParams['rubygems.platform'] = ObjectSerializer::toQueryValue($rubygems_platform);
        }
        // query params
        if ($rubygems_summary !== null) {
            $queryParams['rubygems.summary'] = ObjectSerializer::toQueryValue($rubygems_summary);
        }
        // query params
        if ($yum_architecture !== null) {
            $queryParams['yum.architecture'] = ObjectSerializer::toQueryValue($yum_architecture);
        }


        // body params
        $_tempBody = null;

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json'],
                ['application/json']
            );
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            // $_tempBody is the method argument, if present
            $httpBody = $_tempBody;
            
            if($headers['Content-Type'] === 'application/json') {
                // \stdClass has no __toString(), so we should encode it manually
                if ($httpBody instanceof \stdClass) {
                    $httpBody = \GuzzleHttp\json_encode($httpBody);
                }
                // array has no __toString(), so we should encode it manually
                if(is_array($httpBody)) {
                    $httpBody = \GuzzleHttp\json_encode(ObjectSerializer::sanitizeForSerialization($httpBody));
                }
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $multipartContents[] = [
                        'name' => $formParamName,
                        'contents' => $formParamValue
                    ];
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);

            } else {
                // for HTTP post (form)
                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
            }
        }


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = \GuzzleHttp\Psr7\build_query($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Create http client option
     *
     * @throws \RuntimeException on file opening failure
     * @return array of http client options
     */
    protected function createHttpClientOption()
    {
        $options = [];
        if ($this->config->getDebug()) {
            $options[RequestOptions::DEBUG] = fopen($this->config->getDebugFile(), 'a');
            if (!$options[RequestOptions::DEBUG]) {
                throw new \RuntimeException('Failed to open the debug file: ' . $this->config->getDebugFile());
            }
        }

        return $options;
    }
}
